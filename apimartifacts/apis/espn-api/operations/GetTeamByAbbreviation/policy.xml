<!--
    IMPORTANT:
    - Policy elements can appear only within the <inbound>, <outbound>, <backend> section elements.
    - Only the <forward-request> policy element can appear within the <backend> section element.
    - To apply a policy to the incoming request (before it is forwarded to the backend service), place a corresponding policy element within the <inbound> section element.
    - To apply a policy to the outgoing response (before it is sent back to the caller), place a corresponding policy element within the <outbound> section element.
    - To add a policy position the cursor at the desired insertion point and click on the round button associated with the policy.
    - To remove a policy, delete the corresponding policy statement from the policy document.
    - Policies are applied in the order of their appearance, from the top down.
-->
<policies>
	<inbound>
        <base />
        <rate-limit calls="10" renewal-period="60" />
    </inbound>
	<backend>
		<forward-request />
	</backend>
	<outbound>
        <choose>
            <when condition="@(context.Response.StatusCode == 200)">
                <set-body>
                    @{
                        var response = context.Response.Body.As<JObject>();
                        var team = response["team"];


                        var body =  new JObject();

                        body.Add(new JProperty("id", ((string) team["id"])));
                        body.Add(new JProperty("location", ((string) team["location"])));
                        body.Add(new JProperty("abbreviation", ((string) team["abbreviation"])));

                        body.Add(new JProperty("displayName", ((string) team["displayName"])));
                        body.Add(new JProperty("shortName",((string) team["shortName"]) ));


                        return body.ToString();

                    }
                </set-body>
            </when>
        </choose>
    </outbound>
</policies>